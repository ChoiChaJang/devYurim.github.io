<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devYurim</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>developer blog</description>
    <pubDate>Mon, 30 Apr 2018 20:44:44 +0900</pubDate>
    
      <item>
        <title>윈도우(Windows)에 지킬(Jekyll)설치하기</title>
        <link>/2018/04/13/11.html</link>
        <guid isPermaLink="true">/2018/04/13/11.html</guid>
        <description>&lt;p&gt;
요즘 노트북은 잘 안쓰고 연구실 컴퓨터로 거의 작업을 하고 있다!&lt;br /&gt;
연구실 컴퓨터에는 지킬(jekyll)이 깔려있지 않으니 뭔가 포스팅을 안하는 느낌이여서 시험도 끝났겠다 지킬을 설치하였다!&lt;br /&gt;
약간의 삽질이 있었으므로 설치 방법을 글로 남기려고 한다ㅠ.ㅠ&lt;br /&gt;&lt;br /&gt;

연구실 컴퓨터는 Windows 10 pro 버전이다.&lt;br /&gt;&lt;br /&gt;

&lt;p&gt;
&amp;gt; **1. 루비(ruby) 설치**

윈도우 컴퓨터에는 맥 OS 같이 루비가 깔려있지 않으므로 루비를 설치해주어야 한다! 다운로드는 아래의 사이트에서 할 수 있다.&lt;br /&gt;
ruby 다운로드 : https://rubyinstaller.org/downloads/ &lt;br /&gt;&lt;br /&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/39422682-5b1cd442-4ca9-11e8-8131-919bc6762898.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;br /&gt;&lt;br /&gt;

Devkit 을 같이 설치한다! 나는 안정 버전이라고 표시된 2.4.4-1 version을 설치하였다.&lt;br /&gt;&lt;br /&gt;

** 만약 Git 이 설치되어 있지 않으면 설치해야한다! **
git 다운로드 : https://git-scm.com/downloads &lt;br /&gt;&lt;br /&gt;


&amp;gt; **2. 지킬(jekyll) 설치**

&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/39422813-ec8efcac-4ca9-11e8-860e-2d866eb5ba70.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;&lt;br /&gt;
설치가 끝나면 윈도우 검색창에 ruby를 치면 **'Start Command Prompt with Ruby'** 라는 Command 창을 킨다. 다음의 명령어를 통해 지킬을 설치한다.&lt;br /&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jekyll&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;br /&gt;&lt;br /&gt;

&amp;gt; **3. 블로그 페이지에 bunlde 설치하기**

&lt;br /&gt;&lt;br /&gt;
이 경우는 블로그 페이지가 이미 있는 경우에 한하여 재 설치 할 수 있는 방법이다!&lt;br /&gt;
만약, 블로그 페이지가 없는 새로운 사용자라면 새로운 저장소(repository)를 만들고 맘에드는 블로그를 clone하여 사용해야 한다.&lt;br /&gt;
자세한 사항은 **[이곳](https://devyurim.github.io/2018/01/01/1.html)** 을 참조 하는 것이 좋을 것 같다.&lt;br /&gt;&lt;br /&gt;

나는 블로그를 Dropbox를 통하여 관리하기 때문에 Dropbox 폴더안에 Git에 올려놓은 로컬 파일들이 모두 존재한다.&lt;br /&gt;
내 블로그 파일 들이 있는 로컬 경로로 변경하여 접속한다.(C:\\내 로컬파일 경로)&lt;br /&gt;
폴더 내에 있는 Gemfile을 이용해서 bundle 설치를 한다.&lt;br /&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;br /&gt;&lt;br /&gt;

jekyll이 되는지 확인하기 위해서 build하고 로컬 실행해 본다.&lt;br /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;build&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;serve&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;br /&gt;&lt;br /&gt;

http://localhost:4000 으로 접속하여 실행이 제대로 되면 윈도우 셋업은 끝이다.&lt;br /&gt;&lt;br /&gt;


이렇게 해서 연구실 컴퓨터에도 지킬 설정 끝! 이제 열심히 포스팅 할 일만 남았다 ㅎㅎ
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Apr 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>Machine Learning(머신러닝) 시작하기</title>
        <link>/2018/04/13/10.html</link>
        <guid isPermaLink="true">/2018/04/13/10.html</guid>
        <description>&lt;center&gt;&lt;h2 color=&quot;#DF0174&quot;&gt;Machine Learning(머신러닝) 시작하기&lt;/h2&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번 학기를 끝으로 학부생은 끝나고 다음학기 부터 석사를 시작할 예정이다.&lt;br /&gt;
연구실에 일한지 어느덧 2년정도 되어 몇몇 알고리즘을 사용도 해보고 실제 서비스에 적용도 해보았지만, 아직도 머신러닝의 개념이 명확하지 않은 느낌이 들었다.
또한, 앞으로 석사 때 딥러닝을 공부할 예정이기 때문에 딥러닝에 대하여 심도 있게 연구하기 위해서는 머신러닝의 개념들이 뒷받침 되어야 한다고 생각했다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;석사로 입학하여 연구를 시작하기에 앞서 머신러닝의 베이직한 개념부터 다양한 머신러닝 알고리즘을 앞으로 꾸준히 정리해 나갈 예정이다.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. Supervised Learning(지도 학습)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;지도 학습(Supervised Learning)&lt;/code&gt;&lt;/strong&gt; 은 학습할 때 데이터에 대한 &lt;strong&gt;정답 라벨(Label)&lt;/strong&gt; 을 이용하여 정답 값을 구하기 위한 &lt;strong&gt;함수&lt;/strong&gt; 를 유추하는 학습방법이다.
  지도 학습시 데이터를 &lt;strong&gt;트레이닝을 위한 데이터셋(training data-set)&lt;/strong&gt; 과 테스트를 위한 &lt;strong&gt;테스트 데이터셋(test data-set)&lt;/strong&gt; 으로 나누어 진행을 하여야한다.
  머신러닝 알고리즘을 학습할 때는 &lt;strong&gt;트레이닝 데이터 셋(training data-set)&lt;/strong&gt; 을 이용하여 &lt;strong&gt;학습&lt;/strong&gt; 을 하고 &lt;strong&gt;테스트 데이터 셋(test data-set)&lt;/strong&gt; 으로 &lt;strong&gt;성능을 측정&lt;/strong&gt; 한다.&lt;br /&gt;&lt;br /&gt;
  지도 학습(Supervised Learning)은 데이터가 많으면 많을수록 정답 데이터를 만드는데 시간과 비용이 많이 소모된다는 단점이 있지만,
  쉽게 머신러닝 알고리즘에 적용이 가능하고 성능 측정 방법이 쉽다는 장점이 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;지도 학습을 사용하는 문제에는 다음과 같은 것들이 있다. &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) 분류(Classification)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;데이터와 카테고리 간의 관계를 학습하여 데이터의 카테고리를 판별하는 방법이다. 카테고리는 &lt;strong&gt;클래스(class)&lt;/strong&gt; 라고 불린다.&lt;br /&gt;
  예측 하려는 값이 이산 값(discrete value)일 때 사용하는 방법이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;ex) 이미지의 카테고리 예측하기, 스팸 / 비스팸 이메일 구분하기 등&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/38665753-26c0c29c-3e78-11e8-83bd-5ea1135c3154.png&quot; width=&quot;60%&quot; /&gt;&lt;br /&gt; http://cs231n.github.io/classification/&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) 회귀(Regression)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;위의 &lt;code&gt;분류(Classification)&lt;/code&gt; 가 데이터 셋트에 대하여 어떠한 특정 클래스를 찾는 문제였다면, &lt;br /&gt;
  &lt;strong&gt;&lt;code&gt;회귀(Regression)&lt;/code&gt;&lt;/strong&gt; 는 어떤 &lt;strong&gt;X값&lt;/strong&gt; 에 대하여 &lt;strong&gt;Y값&lt;/strong&gt; 의 정답을 만족할 수 있는 &lt;strong&gt;최선의 방정식(equation)&lt;/strong&gt; 을 찾는 것이다.&lt;br /&gt;
  예측하려는 값이 연속된 값(continuous value)일 때 사용하는 방법이다.
  이때 성능 측정은 내가 예측한 y’ 값과 정답 y 값의 차이를 비교하는 방법으로 &lt;strong&gt;RMSE(평균 제곱근 오차, Root Mean Square Error)&lt;/strong&gt; 를 낮추는 것을 목표로 한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;ex) 학생의 점수 분포를 이용하여 예상 점수 예측하기, 부동산 가격 예측, 주가 예측 등 &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/38686742-063b775a-3eb0-11e8-85eb-cafb1ee585af.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. Unsupervised Learning(비 지도 학습)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;비지도 학습(Unsupervised Learning)&lt;/code&gt;&lt;/strong&gt; 은 데이터만 보고 분석하여 특징이 비슷한 데이터끼리 그룹을 지어 주는 것이다. 이것을 &lt;strong&gt;군집화(Clustering, 클러스터링)&lt;/strong&gt; 라고 한다.
  비지도 학습은 데이터의 &lt;strong&gt;숨겨진 특징(Feature)&lt;/strong&gt; 이나 분포, 구조를 밝혀내는데 사용된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;비지도 학습은 정답 라벨(Label)이 주어지지 않기 때문에, &lt;strong&gt;예측한 값이 정답에 가까운지 아닌지 확인 할 수 없다.&lt;/strong&gt; 따라서, 비지도 학습을 사용하는 경우는 유사한 사용자끼리 군집화(Clustering) 할 때 또는 비슷한 특징을 가지는 기사들을 군집화(Clustering) 할 때 등에 사용 될 수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/38689534-e4b8f894-3eb6-11e8-8d35-2195060dac9a.png&quot; width=&quot;60%&quot; /&gt;&lt;br /&gt; https://www.mailman.columbia.edu/research/population-health-methods/cluster-analysis-using-k-means&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;CS231n 강의 자료 : http://cs231n.github.io/classification/&lt;/li&gt;
  &lt;li&gt;https://www.mailman.columbia.edu/research/population-health-methods/cluster-analysis-using-k-means&lt;/li&gt;
  &lt;li&gt;모두를 위한 머신러닝 / 딥러닝 : https://hunkim.github.io/ml/&lt;/li&gt;
  &lt;li&gt;솔라리스의 인공지능 연구실 : http://solarisailab.com/archives/1785&lt;/li&gt;
  &lt;li&gt;http://mangkyu.tistory.com/32&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Apr 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>안드로이드 프로그래밍(Android Programming) - 로그인(Login) 폼에 스크롤 뷰 적용</title>
        <link>/2018/01/19/9.html</link>
        <guid isPermaLink="true">/2018/01/19/9.html</guid>
        <description>&lt;center&gt;&lt;h2 color=&quot;#DF0174&quot;&gt;안드로이드 프로그래밍(Android Programming) - 로그인(Login) 폼에 스크롤 뷰 적용&lt;/h2&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기존에 작성한 &lt;a href=&quot;https://devyurim.github.io/2018/01/17/8.html&quot;&gt;로그인폼 만들기&lt;/a&gt; 에서는 입력을 위해 키보드를 띄웠을때 버튼이 가려지는 단점이 있었다. 따라서 ScrollView를 적용하여 이런 단점을 보완하였다.&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. activity_login.xml 파일 수정&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일단 &lt;strong&gt;res -&amp;gt; layout -&amp;gt; activity_login.xml&lt;/strong&gt; 파일에서 아래의 레이아웃 구조처럼 수정하였다.&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35137624-a3160a82-fd2d-11e7-93cb-2ae55041b7d6.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;스크롤 뷰(ScrollView)에 관한 기본적인 attribute를 보면 다음과 같다.&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35137797-868df9d2-fd2e-11e7-9ac1-4166c94a420d.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;scrollbarStyle&lt;/strong&gt;
안드로이드에서 지원하는 스크롤바 스타일에는 4가지가 존재한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;스타일&lt;/th&gt;
      &lt;th&gt;&lt;center&gt;기능&lt;/center&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;insideOverlay&lt;/td&gt;
      &lt;td&gt;Padding 추가 없이 내용물의 안쪽에 스크롤바를 배치한다. &lt;br /&gt; 스크롤 바가 내용물 위에 투명하게 올라간다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;insideInset&lt;/td&gt;
      &lt;td&gt;Padding을 추가하고 패딩영역에 스크롤바를 배치한다. &lt;br /&gt; 스크롤 바가 내용물에 오버랩되지 않는다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;outsideOverlay&lt;/td&gt;
      &lt;td&gt;Padding 추가 없이 스크롤바를 화면 가장자리에 배치한다. &lt;br /&gt; 스크롤 바가 내용물 위에 투명하게 올라간다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;outsideInset&lt;/td&gt;
      &lt;td&gt;Padding을 추가하고 스크롤바를 화면 가장자리에 배치한다. &lt;br /&gt; 스크롤 바가 내용물에 오버랩되지 않는다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;원하는 스크롤바 스타일을 골라서 설정해 주면 된다. 나는 OutsideOverlay를 사용하였다. &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;style&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;스크롤바 스타일도 여러종류를 선택 할 수 있다. 선택지는 다음과 같다. 지금 현재 필요한 기능은 아닌거 같아서 default로 사용하였다.&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35138980-6611f8f6-fd34-11e7-98d5-0a1c4b95b721.png&quot; width=&quot;40%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;fillViewport&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fillViewport 항목은 True일 때 내용물의 크기가 화면을 넘어가도 알아서 내용물의 크기만큼 뷰가 확장이 된다. False이면 내용물의 크기가 화면밖으로 넘어가도 보이지 않게 된다. &lt;strong&gt;따라서 스크롤 뷰 fillViewport 적용시 스크롤 뷰의 height는 자식 뷰에 있는 콘텐츠 길이에 따라 결정되 기 때문에 자식뷰의 match_parent의 속성은 적용될 수 없다.&lt;/strong&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;clipToPadding&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;clipToPadding은 스크롤의 오작동 없이 뷰( scrollView, listView, gridView )에 padding 값을 주고 싶을 때 조절할 수 있는 항목이다.&lt;br /&gt;
( 디폴트 값은 True이다 ) &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;패딩을 주는 이유는 뷰의 맨 마지막 요소가 다른 뷰에 오버랩 되어 가려지기 때문인데 해당 뷰에 패딩을 주게 되면 스크롤이 패딩이 적용된 안쪽에서만 작동하는 오류가 생기게 된다. 그렇기 때문에 해당 뷰 위아래에 header 와 footer를 추가하는 방법도 있지만 clipToPadding 항목을 False로 사용하면 쉽게 해결된다.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 키보드가 올라와도 양식이 자동으로 위로 밀려서 버튼이 겹치지 않는다!&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35140310-10397dea-fd3a-11e7-838d-0b0869039986.png&quot; width=&quot;40%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>안드로이드 프로그래밍(Android Programming) - 로그인(Login) 폼 만들기</title>
        <link>/2018/01/17/8.html</link>
        <guid isPermaLink="true">/2018/01/17/8.html</guid>
        <description>&lt;center&gt;&lt;h2 color=&quot;#DF0174&quot;&gt;안드로이드 프로그래밍(Android Programming) - 로그인(Login) 폼 만들기&lt;/h2&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. 로그인 액티비티 생성&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
안드로이드에서 기본적으로 로그인 폼을 지원한다. Activity 추가시 &lt;strong&gt;Login Activity&lt;/strong&gt; 를 생성한다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35030642-29e29b2a-fba3-11e7-95a2-0be7e1f2fcb0.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Activity Name과 레이아웃 xml 파일 이름, 타이틀 이름을 입력하고 Finish 버튼을 눌러서 생성한다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35030740-7d1c257c-fba3-11e7-8a9a-be88caf366d4.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. 레이아웃 구조 수정&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;res-&amp;gt; layout -&amp;gt; activity_login.xml&lt;/strong&gt; 파일을 보면 현재 페이지의 레이아웃이 어떻게 구성되어지는지 볼 수 있다. 여기서 필요한 요소를 추가하거나 삭제할 수 있다. &lt;strong&gt;&lt;code&gt;Component Tree&lt;/code&gt;&lt;/strong&gt; 탭을 활용하면 현재 레이아웃 계층이 어떻게 구성되어 있는지 한눈에 알아 볼 수 있다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;로그인 폼이 어떻게 만들어 졌는지 살펴 보면 Linear Layout(Horizontal) -&amp;gt; Scroll View -&amp;gt; Linear Layout(Vertical) 안에 EditText, Button 등이 차례로 들어가져 있는 모습을 볼 수 있다. Scroll View는 필요 없을 것 같아 삭제하고 구조를 Linear Layout(Horizontal) -&amp;gt; LinearLayout(Vertical) -&amp;gt; EditText, EditText, Button, Button 구조로 수정하였다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 안드로이드 어플리케이션의 화면을 구성할 때 버튼이나 텍스트 뷰, 텍스트입력, 버튼 등 각 요소를 넣으려면 &lt;strong&gt;Layout 안에 넣어줘야 어느 화면에서나 구조적으로 배치가 될 수 있다.&lt;/strong&gt; 여기서는 LinearLayout이 Layout 컴포넌트에 해당이 된다. Layout 구조는 아래의 그림과 같이 다양하게 구성되어 있다. 구현시 원하는 기능대로 레이아웃을 추가하여 레이아웃 안에 컴포넌트를 추가하면 된다.
&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35031668-42697a98-fba7-11e7-82bd-e8fcccbfbfc7.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;es-&amp;gt; layout -&amp;gt; activity_login.xml&lt;/strong&gt; 파일을 보면 레이아웃 구조를 Text로 변경해서 보면 각 요소별로 설정을 할 수 있다. id는 해당 컴포넌트를 구별하기 위하여 이름을 지어두는 곳이고, &lt;strong&gt;&lt;code&gt;layout_width, layout_height&lt;/code&gt;&lt;/strong&gt; 는 해당 컴포넌트의 가로, 세로 길이를 결정한다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;match_parent&lt;/code&gt;&lt;/strong&gt; 는 쉽게 말하면 부모 컴포넌트의 가로나 세로 길이에 맞춰서 해당 컴포넌트의 길이를 설정하라는 뜻이다. 레이아웃 뷰에서 Linear Layout의 가로 길이를 화면의 가로 길이만큼(match_parent)으로 설정 했기 때문에 button의 width(가로)를 match_parent로 설정했을때 가로 길이가 화면에 꽉차게 보이는 것이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;wrap_content&lt;/code&gt;&lt;/strong&gt; 는 해당 뷰에 들어있는 내용물의 크기에 따라 뷰의 크기가 결정되도록 조정한다. 즉, 컴포넌트에 텍스트가 존재하면 텍스트의 크기 만큼 컴포넌트의 크기가 결정되는 것이다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/strong&gt; 은 컴포넌트와 컴포넌트 사이의 간격(바깥 여백)을 지정하는 것이고, &lt;strong&gt;&lt;code&gt;padding&lt;/code&gt;&lt;/strong&gt; 은 컴포넌트에 할당된 뷰 내부(안쪽 여백)에서 크기를 조절 할 때 사용한다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아래의 로그인과 회원가입 버튼처럼 버튼을 한 행에 배치 할 때는 LinearLayout(horizontal)을 추가한 뒤 버튼 2개를 레이아웃 안에 추가해주면된다. 버튼의 길이를 결정할 때 임의의 값을 지정해주게 되면 화면 크기에 따라서 다르게 보이기때문에 &lt;strong&gt;&lt;code&gt;weight&lt;/code&gt;&lt;/strong&gt; 라는 속성을 이용하여 지정하였다. 로그인 버튼과 회원가입 버튼의 weight를 1 로 지정했기 때문에 한 행에서 동일한 길이의 버튼이 생성되었다.&lt;br /&gt; 만약, 로그인 버튼의 weight를 2, 회원가입 버튼의 weight를 1로 지정하였다면 로그인의 버튼이 회원가입 버튼보다 상대적으로 길이가 길 것이다. (weight 2는 전체 길이의 2/3, weight 1은 전체 길이의 1/3)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;weight가 1:1 인 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35039879-8b16da5e-fbc2-11e7-9170-4d7740ca6ffb.png&quot; width=&quot;30%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;weight가 2:1 인 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35039825-615003bc-fbc2-11e7-8293-3309032a11ca.png&quot; width=&quot;30%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;수정한 폼과 코드는 아래와 같다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35039490-63b458de-fbc1-11e7-8380-2c40a29d9a83.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;activity_login.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gravity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;center_horizontal&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paddingBottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@dimen/activity_vertical_margin&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paddingLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@dimen/activity_horizontal_margin&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paddingRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@dimen/activity_horizontal_margin&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paddingTop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@dimen/activity_vertical_margin&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.example.devyurim.orangeaid.LoginActivity&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearLayout&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@+id/email_login_form&quot;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gravity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;center&quot;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vertical&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EditText&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@+id/email&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@string/prompt_email&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textEmailAddress&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EditText&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@+id/password&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@string/prompt_password&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imeActionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;6&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imeActionLabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@string/action_sign_in&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imeOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actionUnspecified&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textPassword&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;singleLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LinearLayout&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;horizontal&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@+id/email_sign_in_button&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;?android:textAppearanceSmall&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_marginTop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;16dp&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@string/action_sign_in&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bold&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@+id/email_sign_up_button&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;?android:textAppearanceSmall&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_marginTop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;16dp&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout_weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@string/action_sign_up&quot;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bold&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/LinearLayout&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/LinearLayout&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;3. 컴포넌트 텍스트 수정&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;res -&amp;gt; values -&amp;gt;strings.xml&lt;/strong&gt; 파일에 가보면 로그인 폼에서 사용되는 string 변수들이 자동으로 생성되어 있다. 여기서 원하는 텍스트로 수정해주면 된다.&lt;br /&gt;
(text view 글자, hint 글자, button 글자, page title 등)&lt;br /&gt;
추가 문구가 필요하면 생성하고 컴포넌트에 매칭시켜주면 된다. 필요한 사항만 남기고 나머지는 모두 지웠다. 필요 할때마다 추가하여 사용한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;layout_login.xml에 가보면 text 요소에 “@string/action_sign_in”라고 기재되어 있다. 이 코드의 의미는 strings.xml의 name이 action_sign_in인 문구를 사용하라는 뜻이다. 통일성을 위해서 나는 strings.xml 파일을 사용하여 텍스트 값을 변경하였다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35036587-29595b34-fbb8-11e7-9c97-64bd10124eab.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;추가적으로 화면의 타이틀을 변경하고 싶으면 &lt;strong&gt;AndroidManifest.xml&lt;/strong&gt; 파일에서 해당 액티비티의 label 값을 수정해주면 된다. &lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35041667-df12b046-fbc8-11e7-8e81-572c33db322b.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;4. LonginActivity.java 수정&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
로그인 액티비티를 생성하면 로그인 기능에 사용되는 기본적인 함수들이 자동으로 생성이 되므로 나중에 기능을 추가할 때 문서를 보고 함수를 수정하면 된다. 아직 서버가 완성되지 않았으므로 &lt;strong&gt;일단은 onCreate 함수 빼고 모두 지워 주었다. 필요한 기능이 생길때 마다 그때 함수를 추가하는 방식으로 작성할 예정이다.&lt;/strong&gt;
또한, EditText나 Button에서 각각 이벤트 핸들러를 적용할 수 있도록 이벤트 핸들러 함수를 추가하였다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또한, 이메일 입력 자동완성기능은 DB와 연동이 필요하기 때문에 AutocompleteTextView에서 textedit로 컴포넌트를 변경해 주었다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;수정한 코드는 아래와 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;LoginActivity.java&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;KeyEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputmethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EditorInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EditText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LoginActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// UI references.&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditText&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mEmailView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditText&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mPasswordView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Override&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activity_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Set up the login form.&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mEmailView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EditText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mPasswordView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EditText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// event handler&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mEmailView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOnEditorActionListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OnEditorActionListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Override&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onEditorAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KeyEvent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IME_ACTION_DONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IME_NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mPasswordView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOnEditorActionListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OnEditorActionListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Override&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onEditorAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KeyEvent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IME_ACTION_DONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IME_NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//attemptLogin();&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Button&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mEmailSignInButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email_sign_in_button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// sign in button&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mEmailSignUpButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email_sign_up_button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// sign up button&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// event handler&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mEmailSignInButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Override&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;mEmailSignUpButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Override&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아직 서버가 연동되지 않았으므로 &lt;strong&gt;각 버튼을 눌렀을 시 다른 액티비티로 넘어가도록 구현&lt;/strong&gt; 하였다. 로그인 버튼을 눌렀을 때 &lt;strong&gt;&lt;code&gt;MainActivity&lt;/code&gt;&lt;/strong&gt; 로 넘어가고 회원가입 버튼을 눌렀을때 &lt;strong&gt;&lt;code&gt;RegisterActivity&lt;/code&gt;&lt;/strong&gt; 로 넘어가도록 핸들러를 구현하였다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;일단 RegisterActivity를 Empty Activity로 추가 해준다음 다음과 같이 코드를 수정하였다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// sign-in button event handler&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mEmailSignInButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Override&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// sign-up button event handler&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mEmailSignUpButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Override&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RegisterActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
추후 웹 서버 연동과 db연동을 한 후 로그인 확인기능과 추가 핸들러 기능을 구현할 예정이다.위의 예제 코드로 왠만한 기본적인 안드로이드 페이지를 응용하여 만들수 있다.(회원가입 폼, 기본 메뉴 화면 등) 어플리케이션에 필요한 화면들을 다 만든 뒤 추가 기능을 추가해야겠다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>안드로이드 프로그래밍(Android Programming) - 시작(Intro) 화면 만들기</title>
        <link>/2018/01/17/7.html</link>
        <guid isPermaLink="true">/2018/01/17/7.html</guid>
        <description>&lt;center&gt;&lt;h2 color=&quot;#DF0174&quot;&gt;안드로이드 프로그래밍(Android Programming) - 시작(Intro) 화면 만들기&lt;/h2&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. JavaClass 생성&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일단 시작 화면을 따로 생성하기 위하여 &lt;code&gt;자바 클래스(java 파일)&lt;/code&gt; 를 먼저 생성한다. 클래스 이름은 IntroActivity 하였다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35026602-63874880-fb8f-11e7-8f5b-bd84f28caab5.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IntroActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4초 인트로 화면 보여주기&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// next Activity 기재.&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. drawable 폴더에 background_intro.xml 파일 생성&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35026602-63874880-fb8f-11e7-8f5b-bd84f28caab5.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Background&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@color/windowBackground&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bitmap&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gravity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;center&quot;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/item&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/layer-list&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;3. vaules/styles.xml 파일 수정&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;아래의 코드를 &lt;strong&gt;res -&amp;gt; values -&amp;gt; styles.xml&lt;/strong&gt; 파일에 스타일을 추가해준다.&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;intro&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;IntroTheme&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Theme.AppCompat.NoActionBar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;android:windowBackground&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/background_intro&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/style&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35027154-73c2e008-fb92-11e7-9f67-5e610279660c.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;4. AndroidManifest.xml 파일 수정&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt; 시작 화면이 현재 MainActivity로 되어 있는데 이를 IntroActivity로 조정하기 위한 작업이다. manifests -&amp;gt; &lt;strong&gt;&lt;code&gt;AndroidManifest.xml&lt;/code&gt;&lt;/strong&gt; 파일에 가서 아래와 같이 코드를 수정한다.
&lt;strong&gt;Intro Theme을 따로 설정 해주는것&lt;/strong&gt; 을 까먹으면 안된다! &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35027514-7d7e91b2-fb94-11e7-9cad-d67434bdf743.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;시작 액티비티를 수정하고 반드시 그다음에 실행할 액티비티를 아래에 추가해 주어야 한다. 아래 이미지는 시작 화면 적용한 화면이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35027638-2e6a8b66-fb95-11e7-977d-a10abcdbd6e5.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>안드로이드 프로그래밍(Android Programming) - 디자이너 없이 앱디자인 하는 법</title>
        <link>/2018/01/17/6.html</link>
        <guid isPermaLink="true">/2018/01/17/6.html</guid>
        <description>&lt;center&gt;&lt;h2 color=&quot;#DF0174&quot;&gt;안드로이드 프로그래밍(Android Programming) - 디자이너 없이 앱 디자인 하는 법&lt;/h2&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. Material Design&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;디자이너가 없는 개발 환경에서 어플을 디자인 할 수 있는 가이드 라인이 존재 한다. 구글에서 제공하는 &lt;strong&gt;&lt;a href=&quot;https://developer.android.com/training/material/get-started.html?hl=ko&quot;&gt;Material Guide&lt;/a&gt;&lt;/strong&gt; 를 사용하면 된다. &lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;material guide blog : http://davidhyk.github.io/google-design-ko/material-design/introduction.html#introduction-principles
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;구글에서 제공하는 &lt;strong&gt;&lt;code&gt;Material Guide&lt;/code&gt;&lt;/strong&gt; 를 사용하면 이미지 파일을 포토샵으로 소스를 만들어 추출 할 필요 없이 안드로이드 디자인 서포트 라이브러리를 연결함으로써 가이드된 UI를 사용 할 수 있다. 여백이나 사이즈 등 수치만 잡아주면 되므로 매우 심플하고 편리하게 어플리케이션을 개발 할 수 있다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Material Design&lt;/code&gt;&lt;/strong&gt; 은 안드로이드 &lt;strong&gt;API 21(롤리팝) 이상&lt;/strong&gt; 에서만 사용할 수 있다. 안드로이드 스튜디오에서 API 21 이상을 선택하게 되면 테마는 자동으로 머티리얼 테마가 적용이 된다. 머티리얼 테마가 적용이 된것을 확인하려면 res -&amp;gt; values -&amp;gt; sytle.xml 에서 아래의 사진과 같다면 적용이 된 것이다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34932998-88cc050e-fa18-11e7-9e8c-f0e155a72b6f.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;머티리얼 테마는 &lt;strong&gt;&lt;code&gt;style.xml&lt;/code&gt;&lt;/strong&gt; 에서 다음과 같이 적용 될 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;android:style/Theme.Material (어두운 버전)&lt;/li&gt;
  &lt;li&gt;android:style/Theme.Material.Light (밝은 버전)&lt;/li&gt;
  &lt;li&gt;android:style/Theme.Material.Light.DarkActionBar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사용가능 한 머리티얼 스타일 목록은 &lt;strong&gt;&lt;a href=&quot;https://developer.android.com/reference/android/R.style.html?hl=ko&quot;&gt;R.style&lt;/a&gt;&lt;/strong&gt; 에서 확인 할 수 있다. &lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34936901-4921d452-fa26-11e7-8bb1-3f10d382aea9.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. Theme Color 지정하기&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Material Theme&lt;/code&gt;&lt;/strong&gt; 를 상속 시 테마의 기본 색상을 변경 할 수 있다. 사용자 지정 색상을 사용할 수 있다. 먼저 사용자 색상을 설정하기 위한 요소들은 다음 아래의 그림과 같다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35023450-0d370328-fb7e-11e7-8a33-99e169c79288.png&quot; width=&quot;40%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;color 값은 &lt;strong&gt;res -&amp;gt; values -&amp;gt; colors.xml&lt;/strong&gt; 에서 지정 할 수 있다. 디자이너 없이 좋은 컬러값을 추출해 내는 것이 어려운데 &lt;strong&gt;&lt;a href=&quot;https://www.materialpalette.com/&quot;&gt;Material Palette&lt;/a&gt;&lt;/strong&gt; 를 사용하면 쉽게 컬러 값을 추출 할 수 있다. 각 색상값을 더블클릭하면 웹 컬러값을 자동으로 클립보드에 복사해주기 때문에 ctrl + v하여 사용하거나 palettes 탭에서 주요 테마 색상 2가지를 선택하면 자동으로 테마 뷰를 보여준다.&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35024129-2ff28cf4-fb81-11e7-8e70-ca5692551705.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35023623-d682a25a-fb7e-11e7-92cf-05e3ea6a8e85.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;color 값 정보는 &lt;strong&gt;res -&amp;gt; values -&amp;gt; color.xml&lt;/strong&gt; 파일에 기재하고 컬러값 설정은 &lt;strong&gt;res -&amp;gt; values -&amp;gt; styles.xml&lt;/strong&gt; 에서 설정한다. &lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;res -&amp;gt; values -&amp;gt; colors.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colorPrimary&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FF9800&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/color&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colorPrimaryDark&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;F57C00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/color&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;windowBackground&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ffffff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/color&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textColorPrimary&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ffffff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/color&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textColor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;212121&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/color&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colorAccent&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FF5722&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/color&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/resources&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;res -&amp;gt; values -&amp;gt; styles.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AppTheme&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;android:Theme.Material.Light&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Customize&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;android:colorPrimary&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/colorPrimary&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;android:colorPrimaryDark&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/colorPrimaryDark&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;android:textColorPrimary&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/textColorPrimary&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;android:colorAccent&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/colorAccent&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/style&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/resources&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;3. Material Icon 사용하기&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;아이콘은 구글이 공개한 저작권 없는 &lt;strong&gt;&lt;a href=&quot;https://material.io/icons/&quot;&gt;Material Icon&lt;/a&gt;&lt;/strong&gt; 을 사용하면 된다. Meterial Icon 홈페이지에 접속하면 아이콘을 선택하여 dp별로 SVG(벡터파일)이나 PNG 파일로 다운 받을 수 있다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/35025918-6ed049ac-fb8b-11e7-8275-9fcf1107a037.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;refernece&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;https://developer.android.com/training/material/get-started.html?hl=ko&lt;/li&gt;
  &lt;li&gt;http://davidhyk.github.io/google-design-ko/material-design/introduction.html#introduction-principles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>안드로이드 프로그래밍(Android Programming) - 프로젝트 생성하기(hello project!)</title>
        <link>/2018/01/03/5.html</link>
        <guid isPermaLink="true">/2018/01/03/5.html</guid>
        <description>&lt;center&gt;&lt;h2 color=&quot;#DF0174&quot;&gt;안드로이드 프로그래밍(Android Programming) - 프로젝트 생성하기(hello project!)&lt;/h2&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34511550-cc699236-f09f-11e7-9b2a-194abd6f40b5.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
안드로이드 어플을 제작하기 위해서는 프로젝트를 생성해야한다. Start a new Android Studio Project를 클릭하여 프로젝트를 생성한다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34511554-dc05a234-f09f-11e7-8d07-8db74b312638.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;
Application name은 어플의 이름을 지정하는 부분이다. 기기에 설치 및 실행되는 앱의 이름으로 사용이 된다.&lt;br /&gt;
Company Domain은 개발자를 식별할 수 있는 이름을 도메인 형식으로 입력하는 곳이다.&lt;br /&gt;
Project location은 프로젝트를 설치할 경로(저장 될 경로)를 입력하는 곳이다. […] 버튼을 눌러서 경로를 변경할 수 있다. 간단한 설정을 하고 Next 버튼을 클릭한다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34511839-b238df28-f0a1-11e7-98ee-92228920c759.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;
어플이 실행될 API 버전을 결정한다. API 버전은 어플이 실행될 최소의 안드로이드 버전을 말한다. 버전이 낮을 수록 많은 기기에서 호환이 가능하다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34511893-0caef4d8-f0a2-11e7-895d-f859065cd695.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;
왼쪽의 그래프를 보면 안드로버전 대비 몇프로 정도 지원이 되는지 가이드라인이 있다. 버전이 낮을 수록 모든 기기에서 지원되지만 고려해야할 사항이 많아진다고 한다. 나는 KiKat(4.4)로 결정하였다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34512001-af49b3f4-f0a2-11e7-9bee-c8ff68032b7f.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그다음은 액티비티(Activity) 종류를 결정하는 단계이다. &lt;strong&gt;&lt;code&gt;액티비티(Activity)&lt;/code&gt;&lt;/strong&gt; 는 일종의 어플리케이션 구성요소로서 사용자가 전화걸기, 사진찍기, 이메일 보내기 또는 지도 보기 등의 일을 하기 위해서 상호작용할 수 있는 화면을 제공하는 곳이다. 하나의 어플리케이션은 여러개의 액티비티가 느슨하게 서로 묶여 있는 형태로 구성이 된다. 한 어플리케이션 내에서 하나의 액티비티가 주요 액티비티로 지정되며, 사용자가 이 어플리케이션을 처음 실행 할 때 엑티비티가 사용자에게 표시된다.&lt;/p&gt;

&lt;p&gt;원하는 액티비티(Activity)의 형식을 고르고 Next버튼을 클릭한다. 나는 Emtpy Activity를 선택하였다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34514203-9127180a-f0af-11e7-8f1e-f4abdb09c72b.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
그 다음 화면은 Activity name과 Layout name을 결정하는 화면이다. Activity name으로 이루어진 java파일이 생성되고 Layout name 으로 이루어진 Layout 리소스들, 레이아웃 구조 등이 담긴 xml 파일이 생성된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또한, 하단에 보면 Backwards Compatibility(AppCompat) 라는 옵션이 있는데 이 옵션은 액티비티를 AppCompactActivity로 만들겠다는 의미이다. &lt;strong&gt;AppCompactActivity는 안드로이드 하위버전을 지원하는 액티비티이다.&lt;/strong&gt; Activity API level을 확인하면 API level 11(안드로이드 3.0)이라고 적혀있다. &lt;br /&gt;
즉, 어플을 몇버전부터 지원할지 결정한다음에 AppCompactActivity 옵션을 결정하면 된다. 나는 KiKat(4.4) 부터 지원할 거기 때문에 그냥 옵션체크를 해제하였다. 이름을 결정하고 Finish 버튼을 클릭한다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34514482-ff082426-f0b0-11e7-9195-d07c00e54081.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
java 폴더에보면 액티비티 이름으로 생성된 자바파일이 생성된 것을 볼 수 있다. res는 어플의 레이아웃, 이미지 리소스 등 어플리케이션에 사용되는 리소스들을 집어넣는 곳이다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34514564-5b0b6ab2-f0b1-11e7-93dc-c75665a2593f.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
res -&amp;gt; layout -&amp;gt; activity_main.xml 을 클릭하면 어플 화면의 레이아웃을 쉽게 변경할 수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34514641-af77eaa8-f0b1-11e7-8ab6-f61cbb1d6a3d.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;일단 어플리케이션을 build &amp;amp; run 하기 위해서 상단의 플레이 표시를 클릭하여 실행한다. 실행하게 되면 에뮬레이터를 실행할 수 있는 화면이 나온다. 만약 에뮬레이터를 설치하지 않았다면 Create New Virtual Device 버튼을 클릭하여 에뮬레이터를 만든 후 실행하면 된다. &lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34514711-0e1a28f0-f0b2-11e7-902e-94543c074046.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;에뮬레이터 설치시 원하는 사이즈의 기종을 선택하여 테스트용으로 설치하면 된다. 에뮬레이터를 다 설치하였다면 에뮬레이터를 선택하고 ok버튼을 눌러 실행을 계속 진행하면 된다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34514806-6d47e740-f0b2-11e7-83a0-7f6ca9944dce.png&quot; width=&quot;30%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
이렇게 화면에 잘 뜬다면 잘 만든 것이다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>안드로이드 프로그래밍(Android Programming) 시작하기</title>
        <link>/2018/01/03/4.html</link>
        <guid isPermaLink="true">/2018/01/03/4.html</guid>
        <description>&lt;p&gt;연구실에서 이번년도 산학연 과제로 하드웨어-안드로이드어플-서버구축 부분을 개발하게 되었다. 일단 첫 공부로 안드로이드 프로그래밍부터 공부하기로 결정하였다! 일단 이번 방학까지 구현해야 하는 어플에 대해서 1차적인 개발은 마칠 예정이다. 서버 부분은 나 혼자 하는 작업은 아니지만 다른 사람들과의 협업을 위해 일단 조금씩 골고루 공부해 두는것으로…!&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;안드로이드 프로그래밍은 3학년 1학기 때 경진대회에 참가하면서 약간 다뤄본 경험이 있다. 그때 스크랩한 내용들이랑 새로 스크랩한 내용들을 정리해서 포스팅을 작성할 예정이다. 안드로이드 프로그래밍에 대한 자료들은 구글에도 아주 방대하게 있고 MOOC강의나 책을 사면 무료 공개되는 강의들이 많으니 골고루 참고할 예정이다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. JAVA JDK 설치&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일단 안드로이드 프로그래밍 개발은 자바(Java)언어를 기반으로 이루어진다. 안드로이드 프로그래밍을 하기 위해서는 우선 &lt;strong&gt;&lt;code&gt;JAVA JDK(Java Development Kit)&lt;/code&gt;&lt;/strong&gt; 가 반드시 설치 되어 있어야 한다. 아래의 링크를 타고 들어가서 운영체제에 맞는 JDK를 설치하면 된다.&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Java JDK : http://www.oracle.com/technetwork/java/javase/downloads/jdk9-downloads-3848520.html&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34510278-e7bf4738-f095-11e7-928f-517645aeb3b2.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;

&lt;blockquote&gt;
  &lt;p&gt;1-1. 윈도우(Windows) 설정&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JDK를 설치하고 난 후 자바 환경변수(JAVA_HOME, PATH)를 설정해 주어야 JDK를 사용할 수 있다. 윈도우는 &lt;strong&gt;환경변수&lt;/strong&gt; 설정에 가서 두가지 작업을 해야한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;사용자 변수 새로 만들기
    &lt;ul&gt;
      &lt;li&gt;변수 이름 : JAVA_HOME&lt;/li&gt;
      &lt;li&gt;변수 값 : jdk가 설치 된 경로 (ex. “C:\Program Files\Java\jdk.1.8.0_25”)
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;변수 PATH에 경로 추가
    &lt;ul&gt;
      &lt;li&gt;변수값 맨 뒤에 jdk 경로를 추가해준다.(ex. C:\Program Files\Java\jdk.1.8.0_25;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;cmd 창을 켜고 java-version 을 쳐서 버전이 올바르게 나오면 제대로 경로가 설정이 된것이다.&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1-2. 맥 OS(Mac OS), 리눅스(Linux) 설정&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;맥은 명령어로 자바 환경변수 설정이 가능하다.&lt;/p&gt;

&lt;p&gt;1) JAVA 디렉토리로 이동&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Library&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JavaVirtualMachines&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2) ls 명령어를 이용하여 jdk 버전 확인 -&amp;gt; &lt;strong&gt;메모 해둔다!&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;3) home 파일로 접속&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*위에서 메모한 jdk버전 사용*/&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Library&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JavaVirtualMachines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jdk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jdk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Contents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Home&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4) vim 에디터를 이용하여 bash_profile 접근&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/.bash_profile&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5) 수정모드에서 경로 추가&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*위에서 메모한 jdk버전 사용*/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Library/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JavaVirtualMachines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jdk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jdk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Contents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Home&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;esc 누른 후, :wq로 저장하고 모드를 빠져나온다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;6) 터미널에서 자바 버전 확인&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;version&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이렇게 셋팅을 완료하면 자바를 사용하기 위한 환경 설정은 완료된다. &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. 통합개발환경(IDE) 설치&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제 본격적으로 안드로이드 프로그래밍을 하기 위한 IDE를 설치할 차례이다. 통합개발환경(IDE)으로는 &lt;strong&gt;&lt;a href=&quot;https://developer.android.com/studio/index.html?hl=ko&quot;&gt;안드로이드 스튜디오(Android Studio)&lt;/a&gt;&lt;/strong&gt; 또는 &lt;strong&gt;&lt;a href=&quot;https://www.eclipse.org/downloads/&quot;&gt;이클립스(Eclipse)&lt;/a&gt;&lt;/strong&gt; 를 이용하여 개발을 할 수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;안드로이드 스튜디오는 Jetbrain 회사의 Intellij와 거의 비슷하다. 또한, 에뮬레이터를 지원한다. 에뮬레이터는 간단하게 말하면 만든 소스의 기능을 테스트 할 수 있는 가상 기기이다. 굳이 안드로이드 휴대폰에 어플을 집어넣지 않아도 테스트가 가능하다는 장점이 있다. 다만, 에뮬레이터 기능 때문에 프로그램이 조금 무겁다고 느껴진다. 맥북 프로에서 안드로이드 스튜디오를 돌렸을 때 메모리가 16기가인데 에뮬레이터 돌릴때 약간 무겁다는 느낌이 많이 들었다.&lt;/p&gt;

&lt;p&gt;이클립스는 안드로이드 스튜디오보다는 가벼운 편이다. 자바를 개발하면서 이클립스 단축키나 사용법에 익숙한 사람들은 이클립스를 사용한다고 들었다. 자신에게 편한 IDE를 사용하면 된다. 둘중에 하나 자신이 원하는 통합개발환경을 설치하면 된다.&lt;/p&gt;

&lt;p&gt;나는 &lt;code&gt;Jetbrain&lt;/code&gt; 회사의 프로그램들을 무료 학생계정으로 자주 사용하여 안드로이드 스튜디오를 쓰기로 결정하였다. 개발환경은 MAC OS X Android Studio로 공부를 진행 할 예정이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>마크다운(Markdown) 문법 정리</title>
        <link>/2018/01/01/3.html</link>
        <guid isPermaLink="true">/2018/01/01/3.html</guid>
        <description>&lt;p&gt;이번 포스팅은 github 블로그 내용을 원활하게 작성하기 위해서 마크다운(markdown) 문법을 정리해 두려고 작성하였다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. 헤더(Header)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;헤더 크기는 1~6까지 지원한다.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This is H1        
## This is H2
### This is H3
#### This is H4
##### This is H5
###### This is H6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;this-is-h1&quot;&gt;This is H1&lt;/h1&gt;
&lt;h2 id=&quot;this-is-h2&quot;&gt;This is H2&lt;/h2&gt;
&lt;h3 id=&quot;this-is-h3&quot;&gt;This is H3&lt;/h3&gt;
&lt;h4 id=&quot;this-is-h4&quot;&gt;This is H4&lt;/h4&gt;
&lt;h5 id=&quot;this-is-h5&quot;&gt;This is H5&lt;/h5&gt;
&lt;h6 id=&quot;this-is-h6&quot;&gt;This is H6&lt;/h6&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. 인용구&lt;/strong&gt;*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;인용구는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;를 이용한다. 인용구 안에서 다른 마크업 요소를 섞어서 사용할 수 있다.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 안녕
&amp;gt; &amp;gt; 안녕
&amp;gt; &amp;gt; * 안녕
&amp;gt; &amp;gt; &amp;gt; * 안녕
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;안녕&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;안녕&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;안녕
        &lt;blockquote&gt;
          &lt;ul&gt;
            &lt;li&gt;안녕&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;3. 목록&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;순서가 있는 목록&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  1. 일번
  2. 이번
  3. 삼번
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;일번&lt;/li&gt;
  &lt;li&gt;이번&lt;/li&gt;
  &lt;li&gt;삼번&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;순서가 없는 목록&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* 일번
  * 이번
    * 삼번
+ 일번
  + 이번
    + 삼번
- 일번
  - 이번
    - 삼번
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;일번
    &lt;ul&gt;
      &lt;li&gt;이번
        &lt;ul&gt;
          &lt;li&gt;삼번&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;일번
    &lt;ul&gt;
      &lt;li&gt;이번
        &lt;ul&gt;
          &lt;li&gt;삼번&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;일번
    &lt;ul&gt;
      &lt;li&gt;이번
        &lt;ul&gt;
          &lt;li&gt;삼번&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;4. 코드&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;lt; pre &amp;gt; &amp;lt; code &amp;gt; 에 감싸서 사용한다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;code&amp;gt;Github&amp;lt;/code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Github&lt;/code&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;
  for i in range(1,2):
    print(i)
  &amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code&gt;for i in range(1,2):
  print(i)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
ps. 코드 하이라이터를 사용하는 경우(내 지킬 블로그 테마)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34469050-b6bb5f2e-ef59-11e7-8057-037fcbee07cf.png&quot; width=&quot;30%&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;5. 수평선&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;------
************
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;6. 링크&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;인라인 링크&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [Google](http://google.com)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://google.com&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;자동 연결 링크&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;http://google.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://google.com&quot;&gt;http://google.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;8. 강조&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;진하게, 기울기, 취소선이 있다. 밑줄은 지원하지 않는다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*single asterisks*
_single underscores_
**double asterisks**
__double underscores__
~~cancelline~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;single underscores&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;double underscores&lt;/strong&gt;&lt;br /&gt;
&lt;del&gt;cancelline&lt;/del&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;9. 이미지&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![이미지 이름](이미지 url)로 이미지를 넣을 수 있다.
![Image name](https://user-images.githubusercontent.com/20412850/34468412-ba059536-ef4b-11e7-90d4-3313e9fed8f9.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34468412-ba059536-ef4b-11e7-90d4-3313e9fed8f9.png&quot; alt=&quot;Image name&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ps. 사이즈 조정&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img src=&quot;이미지 url&quot; width=&quot;원하는 크기&quot;&amp;gt;
&amp;lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34468412-ba059536-ef4b-11e7-90d4-3313e9fed8f9.png&quot; width=&quot;60%&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34468412-ba059536-ef4b-11e7-90d4-3313e9fed8f9.png&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;10. 표 그리기&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;표는 마크다운 표를 generate 해주는 사이트가 있다. 원하는 양식에 맞춰서 만들어서 갖다가 쓰면 편하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;표 generate 사이트 : https://www.tablesgenerator.com/markdown_tables&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;First Header  | Second Header
------------- | -------------
Content Cell  | Content Cell
Content Cell  | Content Cell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;First Header&lt;/th&gt;
      &lt;th&gt;Second Header&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;내용 정렬은 아래와 같이 한다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;First Header  | Second Header | Third Header
:------------ | :-----------: | -----------:
Left          | Center        | Right
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;First Header&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Second Header&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Third Header&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Left&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Center&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Right&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;11. 수식(테마에서 지원)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$$ f(x) = \int \frac{2x^2+4x+6}{x-2} $$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;f(x) = \int \frac{2x^2+4x+6}{x-2}&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>깃허브(Github) 블로그에 포스팅하기</title>
        <link>/2018/01/01/2.html</link>
        <guid isPermaLink="true">/2018/01/01/2.html</guid>
        <description>&lt;p&gt;이번에 블로그 내용은 마크다운 문서를 작성하기 위하여 사용하는 에디터, 깃허브 블로그에 포스팅 적용방법 및 페이지 만드는 법을 정리하기 위하여 작성하였다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1. 마크다운 에디터&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;마크다운(Markdown) 형식의 문서를 작성하기 위해서는 마크다운 에디터를 사용하는 것이 편하다.
나는 &lt;a href=&quot;https://atom.io&quot;&gt;아톰(Atom)&lt;/a&gt; 에디터로 마크다운 문서를 작성한다. &lt;code&gt;아톰 에디터&lt;/code&gt;는 &lt;strong&gt;마크다운 미리보기(Markdown preview)&lt;/strong&gt; 를 제공하여 포스팅이 어떻게 작성되는지 확인하면서 작성 할 수 있다. 마크다운 편집기는 &lt;code&gt;아톰&lt;/code&gt;이 아니더라도 미리보기가 제공되는 편집기를 사용하는 것을 추천한다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34468412-ba059536-ef4b-11e7-90d4-3313e9fed8f9.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. 마크다운 파일 생성&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;깃허브 블로그 페이지는 &lt;code&gt;마크다운(Markdown) 문서(.md)&lt;/code&gt;로 작성 한다.&lt;br /&gt;
블로그 디렉터리를 확인하면 &lt;strong&gt;posts&lt;/strong&gt; 라는 폴더가 있는데 이곳이 블로그 포스팅으로 작성한 파일을 넣어두는 부분이다. &lt;strong&gt;제목은 왠만하면 영어 또는 숫자로 적는 것이 좋다. 한글로 작성하게 되면 가끔 인코딩 오류가 발생하여 페이지 로드 오류가 발생했다.&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34468553-d5fbf2d2-ef4e-11e7-8733-b5adde5b68d1.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;블로그 테마별로 날짜를 적는 형식이 조금씩 다른 것 같다. 어떤 테마에는 위의 yml 형식 부분에 적어 두는 곳도 있고 나처럼 문서 제목에 날짜를 달면 자동으로 포스팅한 날짜가 블로그에 적용이 되는 테마도 있는 것 같다. 파일 제목은 포스팅 콘텐츠의 url에 사용이 된다. &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34467427-cd2e76f8-ef34-11e7-8ee4-b99186fede6c.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;먼저 블로그 포스팅 내용을 작성하기 전에 상단의 위의 그림처럼 형식을 먼저 작성한다. &lt;strong&gt;&lt;code&gt;layout: post&lt;/code&gt;&lt;/strong&gt; 는 포스팅 내용을 작성한다는 뜻이다. &lt;strong&gt;&lt;code&gt;layout: page&lt;/code&gt;&lt;/strong&gt; 이면 새로운 페이지를 생성할 수 있다. &lt;strong&gt;title&lt;/strong&gt; 은 포스팅 하는 컨텐츠의 이름, &lt;strong&gt;comments&lt;/strong&gt; 는 댓글을 달수 있도록 허용할 것인가 여부, &lt;strong&gt;tag&lt;/strong&gt; 는 포스팅에 달 태그를 작성하는 곳이다. 테마의 기능마다 작성할 수 있는 것이 제한되어 있으므로 테마 기능에 따라서 작성하면 된다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34467442-49e55c34-ef35-11e7-8e87-8505ef39b287.png&quot; width=&quot;60%&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위의 사진은 &lt;code&gt;about.md&lt;/code&gt;라는 마크다운 형식의 파일을 작성하여 &lt;strong&gt;page를 생성&lt;/strong&gt; 한 모습이다. 페이지를 생성하고 싶으면 루트 디렉토리에 넣어주면 생성이 된다.&lt;strong&gt;(devYurim.github.io/about.md)&lt;/strong&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;3. 깃허브(Github) 블로그에 업로드&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;항상 깃허브에 변경사항을 적용할 때는 저장소에 커밋 및 푸쉬를 해주면 된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*로컬 저장소로 경로 이동 후 아래의 명령어 실행*/&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;커밋내용&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>지킬(Jekyll)을 이용하여 깃허브(Github) 블로그 개설하기</title>
        <link>/2018/01/01/1.html</link>
        <guid isPermaLink="true">/2018/01/01/1.html</guid>
        <description>&lt;p&gt;이번에 Github로 블로그를 이전하면서 &lt;code&gt;Jekyll&lt;/code&gt;을 이용하여 블로그를 개설 하였다.&lt;br /&gt;&lt;br /&gt;
원래 Tistory 블로그를 사용하였는데 코드 하이라이팅이나 에디터가 맘에 들지 않아서 옮기기로 결정하였다.&lt;br /&gt;
또한, 대학교 4학년이고 이제 석사 과정을 준비중인 나에게 뭔가 프로그래머스러운(?) 전문적인 블로그가 필요하다고 생각하였고 활발한 오픈소스 활동을 할 수 있는 곳이 &lt;code&gt;Github&lt;/code&gt; 이였다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번에 블로그를 옮기면서 커스터마이징 하는데 정말 힘들었다…. &lt;br /&gt;
2학년때 &lt;code&gt;HTML/CSS&lt;/code&gt; 과목을 듣긴했는데…. 공부좀 열심히 해둘걸 그랬다..ㅎㅎ&lt;br /&gt;
테마를 다운 받아서 사용했음에도 불구하고 커스터마이징 하는데 꼬박 2일이 걸렸다.&lt;br /&gt;
그럼에도 불구하고 &lt;code&gt;Github&lt;/code&gt; 블로그를 사용하는 이유는 내 입맛대로 레이아웃을 짤 수 있어서 좋은 것 같다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Github&lt;/code&gt; 블로그 개설은 &lt;code&gt;지킬(Jekyll)&lt;/code&gt;이라는 깃허브 페이지에서 지원하는 블로그 정적 생성기를 이용하였다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 style=&quot;color:#DF0174&quot;&gt; 가이드 작성은 &lt;code&gt;MAC OS&lt;/code&gt;를 기준으로 작성 되었습니다.&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;1.Git 및 Github 저장소(Repository) 개설&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일단 Github 블로그를 개설하려면 &lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;이라는 프로그램을 설치하여야 한다. 블로그 관리는 로컬에서 이루어 지며 내 로컬 디렉토리를 Git저장소로 만들기 위하여 &lt;code&gt;Git&lt;/code&gt; 이라는 프로그램이 필요하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Git 설치 링크 : https://git-scm.com &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;본인의 Github 계정으로 들어가 자신의 계정 이름으로 저장소를 생성하여야 한다.&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20412850/34465884-154956b8-ef05-11e7-8eb4-967d677e6027.png&quot; width=&quot;60%&quot; /&gt;&lt;br /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;clone하고 싶은 장소로 루트를 이동하여 아래의 명령어로 저장소를 clone을 한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//github.com/devYurim/devYurim.github.io.git&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2. 지킬(Jekyll) 설치&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;블로그를 설치하려면 &lt;a href=&quot;https://jekyllrb-ko.github.io&quot;&gt;jekyll&lt;/a&gt;을 설치하여야 한다.
&lt;strong&gt;&lt;code&gt;루비(ruby)&lt;/code&gt;가 없다면 루비를 설치하고 진행하여야 한다.&lt;br /&gt;&lt;/strong&gt;
맥이나 리눅스는 brew를 이용하여 쉽게 설치가 가능하다. 또한, 이미 맥OS에는 루비가 이미 설치되어 있다. 루비가 설치되어 있다면 아래의 명령어로 지킬을 설치한다.&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jekyll&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;클론 한 디렉토리 경로로 이동하여 아래의 명령어를 이용해 지킬 블로그를 설치한다.&lt;br /&gt;
&lt;strong&gt;( 지킬 블로그 테마를 적용하려면 3. 지킬 테마 설치 참고 )&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*해당 디렉토리에 설치 됨.*/&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;블로그를 로컬에서 실행하려면 아래의 명령어를 이용하여 실행할 수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;build&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;serve&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;명령어를 실행한 후 http://localhost:4000 으로 접속하면 블로그가 개설이 된 것을 확인 할 수 있다.&lt;br /&gt;
&lt;strong&gt;github에 적용하려면 해당 디렉토리에서 아래와 같이 명령어를 입력하여 저장소에 커밋 및 푸쉬를 하면 된다.&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;커밋 내용&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(자신의 github homepage 주소) https://devYurim.github.io 로 접속하면 블로그가 적용된 것을 볼 수 있다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;3. 지킬 테마(Theme) 설치&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2번 처럼 설치하면 처음부터 끝까지 모두 블로그를 커스터마이징을 해야한다. 하지만, 미리 만들어진 테마를 이용하면 기존 테마에서 조금만 변경하면 원하는대로 커스터마이징이 가능하다. 아래의 사이트에서 여러가지 테마를 무료로 다운받고 수정하여 사용할 수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;지킬 테마 모음 사이트 : http://jekyllthemes.org&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;원하는 스타일의 테마를 다운 받고 폴더 안에 있는 파일들을 git과 연결된 로컬 디렉토리 안에 넣고 커밋 및 푸쉬를 하면 테마가 내 블로그에 적용이 된다.&lt;strong&gt;(github commit 및 로컬 실행 관련해서는 2번 참고)&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;디렉터리 구조를 간략히 살펴보면&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;includes : 블로그 삽입 html&lt;/li&gt;
  &lt;li&gt;layouts : 블로그 레이아웃 html&lt;/li&gt;
  &lt;li&gt;posts : 블로그 컨텐츠들&lt;/li&gt;
  &lt;li&gt;sass : css 파일들&lt;/li&gt;
  &lt;li&gt;site : 지킬로 빌드된 블로그 내용들&lt;/li&gt;
  &lt;li&gt;assets : 이미지파일, js파일, css파일들&lt;/li&gt;
  &lt;li&gt;config.yml : 블로그 생성에 필요한 config가 적힌 파일들&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;config.yml&lt;/strong&gt; 에 들어가 자신에게 맞게 옵션을 수정하면 된다. 디자인을 변경하고 싶으면 css파일이나 html파일을 수정하면 된다. &lt;br /&gt;&lt;br /&gt;
내가 적용한 테마는 &lt;strong&gt;&lt;a href=&quot;https://rohanchandra.github.io/type-theme/&quot;&gt;Type Theme&lt;/a&gt;&lt;/strong&gt; 이다. 지금 사용하고 있는 테마는 반응형 테마에 블로그 디자인도 심플하고 태그 기능, 검색기능, 소셜 플러그인도 잘 지원할 뿐더러 코드 하이라이팅 기능과 수학 수식 작성 기능도 지원하여 매우 만족스럽게 사용중이다!&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;지금 내가 사용하는 테마를 포함해서 몇가지 테마를 더 추천하자면 아래와 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://koppl.in/indigo&quot;&gt;Indigo Minimalist Jekyll Template&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://myjekyll.github.io/jasper2/&quot;&gt;Jasper2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://fongandrew.github.io/hydeout/&quot;&gt;Hydeout&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;나는 1번의 Indigo minimalist 테마 디자인이 맘에들어서 현재 적용한 테마에서 디자인 부분만 비슷하게 약간 수정하였다 :)&lt;br /&gt;
이렇게 자신이 원하는대로 수정이 가능한 점은 좋은 것 같다. 다만 HTML/CSS에 익숙하지 않다면 진입장벽이 높은건 어쩔수 없는것 같다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jan 2018 00:00:00 +0900</pubDate>
      </item>
    
  </channel>
</rss>
